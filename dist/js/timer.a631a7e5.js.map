{"version":3,"sources":["webpack:///./src/views/Timer.vue?013d","webpack:///src/views/Timer.vue","webpack:///./src/views/Timer.vue?7796","webpack:///./src/views/Timer.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","_s","timeOnPageFormatted","staticRenderFns","name","data","currentTimeDifference","timerInterval","created","updateTime","setInterval","destroyed","clearInterval","computed","methods","getTimeDifference","Math","round","currentTimestamp","$store","state","openingTimestamp","component"],"mappings":"gHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACJ,EAAIM,GAAG,2BAA2BN,EAAIO,GAAGP,EAAIQ,yBACnJC,EAAkB,GCItB,GACEC,KAAM,QACNC,KAFF,WAGI,MAAO,CACLC,sBAAuB,KACvBC,cAAe,OAGnBC,QARF,WASIb,KAAKc,aAGLd,KAAKY,cAAgBG,YAAYf,KAAKc,WAAY,MAEpDE,UAdF,WAeIC,cAAcjB,KAAKY,gBAErBM,SAAU,CACRX,oBADJ,WAGM,MAAO,GAAb,gDAGEY,QAAS,CACPC,kBADJ,WAEM,IAAN,uBACM,OAAoF,IAA7EC,KAAKC,OAAOC,EAAmBvB,KAAKwB,OAAOC,MAAMC,kBAAoB,MAE9EZ,WALJ,WAMUd,KAAKW,sBACPX,KAAKW,uBAAyB,IAE9BX,KAAKW,sBAAwBX,KAAKoB,uBCrCqS,I,YCO3UO,EAAY,eACd,EACA7B,EACAU,GACA,EACA,KACA,WACA,MAIa,aAAAmB,E","file":"js/timer.a631a7e5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"time spend on the page: \"+_vm._s(_vm.timeOnPageFormatted))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>time spend on the page: {{ timeOnPageFormatted }}</div>\n</template>\n\n<script>\nexport default {\n  name: 'timer',\n  data() {\n    return {\n      currentTimeDifference: null,\n      timerInterval: null,\n    };\n  },\n  created() {\n    this.updateTime();\n    // На самом деле можно было бы сделать таймаут по % 1000 от начально разницы, а потом только запускать интервал\n    // Было бы немного точнее. Но не уверен, что тут так нужны доли секунды\n    this.timerInterval = setInterval(this.updateTime, 1000);\n  },\n  destroyed() {\n    clearInterval(this.timerInterval);\n  },\n  computed: {\n    timeOnPageFormatted() {\n      // Не подключаем moment и прочие. Этого должно хватить, думаю\n      return `${this.currentTimeDifference / 1000} sec`;\n    },\n  },\n  methods: {\n    getTimeDifference() {\n      let currentTimestamp = new Date().getTime();\n      return Math.round((currentTimestamp - this.$store.state.openingTimestamp) / 1000) * 1000;\n    },\n    updateTime() {\n      if (this.currentTimeDifference) {\n        this.currentTimeDifference += 1000;\n      } else {\n        this.currentTimeDifference = this.getTimeDifference();\n      }\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Timer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Timer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Timer.vue?vue&type=template&id=74e4f189&scoped=true&\"\nimport script from \"./Timer.vue?vue&type=script&lang=js&\"\nexport * from \"./Timer.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"74e4f189\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}